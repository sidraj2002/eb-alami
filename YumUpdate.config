files:
  "/tmp/yum.conf"
    mode: "644"
    owner: root
    group: root
    content: |
        [main]
        cachedir=/var/cache/yum/$basearch/$releasever
        keepcache=0
        debuglevel=2
        logfile=/var/log/yum.log
        distroverpkg=system-release
        exactarch=1
        obsoletes=1
        gpgcheck=1
        plugins=1
        installonly_limit=3
        deltarpm=0
        timeout=5
        retries=3

        # by default the yum configuration will point to the latest release
        # of Amazon Linux AMI. If you prefer not to automatically move to
        # new releases, comment out this line.
        releasever=latest

        #  This is the default, if you make this bigger yum won't see if the metadata
        # is newer on the remote and so you'll "gain" the bandwidth of not having to
        # download the new metadata and "pay" for it by yum not having correct
        # information.
        #  It is esp. important, to have correct metadata, for distributions like
        # Fedora which don't keep old packages around. If you don't like this checking
        # interupting your command line usage, it's much better to have something
        # manually check the metadata once an hour (yum-updatesd will do this).
        # metadata_expire=90m

        # PUT YOUR REPOS HERE OR IN separate files named file.repo
        # in /etc/yum.repos.d
files:
  "/tmp/amzn-updates.repo"
    mode: "644"
    owner: root
    group: root
    content: |
        [amzn-updates]
        name=amzn-updates-Base
        mirrorlist=http://repo.$awsregion.$awsdomain/$releasever/updates/mirror.list
        mirrorlist_expire=300
        metadata_expire=300
        priority=10
        failovermethod=priority
        fastestmirror_enabled=0
        gpgcheck=1
        gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-amazon-ga
        enabled=1
        retries=3
        timeout=5
        report_instanceid=yes

        [amzn-updates-debuginfo]
        name=amzn-updates-debuginfo
        mirrorlist=http://repo.$awsregion.$awsdomain/$releasever/updates/debuginfo/mirror.list-$guid
        mirrorlist_expire=300
        metadata_expire=300
        priority=10
        failovermethod=priority
        fastestmirror_enabled=0
        gpgcheck=1
        gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-amazon-ga
        enabled=0
        retries=3
        timeout=5
        report_instanceid=yes

        [amzn-updates-source]
        name=amzn-updates-source
        mirrorlist=http://repo.$awsregion.$awsdomain/$releasever/updates/SRPMS/mirror.list-$guid
        mirrorlist_expire=300
        metadata_expire=300
        priority=10
        failovermethod=priority
        fastestmirror_enabled=0
        gpgcheck=1
        gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-amazon-ga
        enabled=0
        retries=3
        timeout=5
        report_instanceid=yes

files:
  "/tmp/YumStagingDir.sh"
    mode: "755"
    owner: root
    group: root
    content: |
         #!/bin/bash
        mkdir /tmp/Staging/
files:
  "/tmp/YumUpdate.sh"
    mode: "755"
    owner: root
    group: root
    content: |
          
        #!/bin/bash
        set -xe

        #Script currently replaces original file with modded file, then based on YUM_NO_REVERT variable will either.. 
        #revert back to original or keep modded config. Default = revert).

        #FilesNames#
        _YumConfFile='yum.conf'
        _YumRepoFile='amzn-updates.repo'

        #SourceFilePaths#
        _YumRepoFilePath='/tmp/yum.repos.d/'
        _YumConfFilePath='/tmp/'
        #_DefaultYumConfFile='/etc/yum.conf'
        #_DefaultYumRepoFile='/etc/yum.repos.d/amzn-updates.repo'

        #OriginalFilePaths#
        _DefaultYumConfFilePath='/etc/'
        _DefaultYumRepoFilePath='/etc/yum.repos.d/'

        #StagingFilePaths#
        _StagingYumConfFilePath='/home/ec2-user/Replace/Staging/'
        _StagingYumRepoFilePath='/home/ec2-user/Replace/Staging/'

        #Revert Setting
        _YUM_DONT_REVERT=$(/opt/elasticbeanstalk/bin/get-config environment -k YUM_NO_REVERT);
        _YumCommand=$(/opt/elasticbeanstalk/bin/get-config environment -k YUM_COMMAND);


        function ReplaceFile (){
         echo "Source file is ${1}${3}"
         echo "Target File is ${2}${3}"
         cp -f ${2}${3} ${4}${3}
         rm -rf ${2}${3}
         cp -f ${1}${3} ${2}${3}
         echo "Staging ${4}${3}"
         echo "Target ${2}${3}"
         };

        #Revert Back
        function RevertFile (){
         echo "Begin Revert"
         echo ${2}${3}
         echo ${4}${3}
         if [ "$_YUM_DONT_REVERT" -eq "True" ] || [ "$_YUM_DONT_REVERT" -eq "1" ]
          then
         echo "Revert file to original: FALSE"
         else
         echo "Revert file to original: TRUE"
         rm -rf ${2}${3}
         cp -f ${4}${3} ${2}${3}
         fi;
         };


        ReplaceFile $_YumConfFilePath  $_DefaultYumConfFilePath $_YumConfFile $_StagingYumConfFilePath;
        echo $YumConfFileBak
        ReplaceFile $_YumRepoFilePath $_DefaultYumRepoFilePath $_YumRepoFile $_StagingYumRepoFilePath;

        #Run Yum (Separate function of the above #Revert Back)
        yum clean all;
        echo $_YumCommand;
        #Revert Back

        RevertFile $_YumConfFilePath  $_DefaultYumConfFilePath $_YumConfFile $_StagingYumConfFilePath;
        RevertFile $_YumRepoFilePath $_DefaultYumRepoFilePath $_YumRepoFile $_StagingYumRepoFilePath;
commands: 
  01MakeStagingDir:
    command: /tmp/YumStagingDir.sh
  02RunYumUpdateScript:
    command: /tmp/YumUpdate.sh
option_settings:
  aws:elasticbeanstalk:application:environment:
    YUM_NO_REVERT: 1
  aws:elasticbeanstalk:application:environment:
    YUM_COMMAND: yum update --security -y
